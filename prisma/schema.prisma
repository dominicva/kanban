// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  username     String    @unique
  passwordHash String
  projects     Project[]
}

model Project {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  columns     Column[]

  @@unique([name, userId])
}

model Column {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  tasks     Task[]

  @@unique([title, projectId])
}

model Task {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  description String?
  subtasks    Subtask[]
  column      Column    @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId    String
  status      String?

  @@unique([title, columnId])
}

model Subtask {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String
  status      Boolean
  task        Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId      String

  @@unique([description, taskId])
}
